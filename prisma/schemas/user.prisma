// prisma/schemas/user.prisma
// ===== USER MANAGEMENT SCHEMA - InvenStock V1.0 (CORRECTED) =====

model User {
  id          String     @id @default(cuid())
  email       String?             // ✅ Optional for notifications/recovery
  username    String     @unique  // ✅ Primary login credential
  password    String              // bcrypt hashed
  
  // Personal Information
  firstName   String
  lastName    String
  phone       String?
  
  // Account Status
  status      UserStatus @default(PENDING)
  isActive    Boolean    @default(true)
  emailVerified Boolean  @default(false)
  
  // Security
  lastLogin   DateTime?
  
  // Timestamps
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // Relations
  organizationUsers     OrganizationUser[]
  sentInvitations       UserInvitation[] @relation("InviterUser")
  receivedInvitations   UserInvitation[] @relation("InviteeUser")
  stockTransactions     StockTransaction[]
  transfersRequested    Transfer[] @relation("RequesterUser")
  transfersApproved     Transfer[] @relation("ApproverUser") 
  transfersDispatched   Transfer[] @relation("DispatcherUser")
  transfersReceived     Transfer[] @relation("ReceiverUser")
  notifications         Notification[]
  auditLogs            AuditLog[]
  
  @@index([email])
  @@index([username])  // ✅ เพิ่ม index สำหรับ primary login
  @@index([status])
  @@index([isActive])
  @@map("users")
}

// User Invitations for joining organizations
model UserInvitation {
  id             String           @id @default(cuid())
  organizationId String
  inviterId      String
  inviteeId      String?          // null if inviting by username/email
  
  // ✅ รองรับทั้ง email และ username invitation
  inviteeEmail   String?          // Can invite by email
  inviteeUsername String?         // Can invite by username
  
  // Invitation Details
  roleId         String?          // Role to assign upon acceptance
  message        String?          // Personal invitation message
  
  // Status
  status         InvitationStatus @default(PENDING)
  expiresAt      DateTime         // Invitation expiry
  
  // Response
  respondedAt    DateTime?
  response       String?          // Reason for decline
  
  // Timestamps
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  
  // Relations
  organization   Organization     @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  inviter        User             @relation("InviterUser", fields: [inviterId], references: [id])
  invitee        User?            @relation("InviteeUser", fields: [inviteeId], references: [id])
  
  // ✅ ต้องมีอย่างน้อย 1 ใน 2: email หรือ username
  // และ unique constraint แยกกัน
  @@unique([organizationId, inviteeEmail])
  @@unique([organizationId, inviteeUsername])
  @@index([status])
  @@index([expiresAt])
  @@map("user_invitations")
}