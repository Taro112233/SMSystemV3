// This file is auto-generated. Do not edit manually.
// Edit files in prisma/schemas/ directory instead.
// Last generated: 2025-10-04T08:41:33.192Z
// InvenStock - Multi-Tenant Inventory Management System V1.0

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // For connection pooling
}


// ==========================================
// BASE SCHEMA - V1.0
// ==========================================

// prisma/schemas/base.prisma
// ===== MINIMAL CORE ENUMS - Invite Code Only System =====

// ===== USER & ORGANIZATION ENUMS =====
enum UserStatus {
  PENDING    // ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô email
  ACTIVE     // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
  SUSPENDED  // ‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  INACTIVE   // ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
}

enum OrganizationStatus {
  ACTIVE     // ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
  SUSPENDED  // ‡∏£‡∏∞‡∏á‡∏±‡∏ö
  TRIAL      // ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ
}

// ===== SIMPLIFIED ROLE SYSTEM =====
enum OrganizationRole {
  MEMBER  // ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏ö‡∏¥‡∏Å ‡∏à‡πà‡∏≤‡∏¢ ‡πÅ‡∏Å‡πâ‡∏™‡∏ï‡πá‡∏≠‡∏Å ‡∏î‡∏π‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô
  ADMIN   // Member + CRUD ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô + ‡πÄ‡∏ä‡∏¥‡∏ç‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ 
  OWNER   // Admin + ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ + ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
}

// ===== UI ENUMS FOR COLORS & ICONS =====
enum ColorTheme {
  BLUE         // #3B82F6 - ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
  GREEN        // #10B981 - ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
  RED          // #EF4444 - ‡∏™‡∏µ‡πÅ‡∏î‡∏á
  YELLOW       // #F59E0B - ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
  PURPLE       // #8B5CF6 - ‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á
  PINK         // #EC4899 - ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π
  INDIGO       // #6366F1 - ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏°
  TEAL         // #14B8A6 - ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏ü‡πâ‡∏≤
  ORANGE       // #F97316 - ‡∏™‡∏µ‡∏™‡πâ‡∏°
  GRAY         // #6B7280 - ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤
  SLATE        // #475569 - ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡πÄ‡∏Ç‡πâ‡∏°
  EMERALD      // #059669 - ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏°‡∏£‡∏Å‡∏ï
}

enum IconType {
  // Department Icons
  BUILDING     // üè¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  HOSPITAL     // üè• ‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•
  PHARMACY     // üíä ‡∏£‡πâ‡∏≤‡∏ô‡∏¢‡∏≤
  WAREHOUSE    // üì¶ ‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  LABORATORY   // üß™ ‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πá‡∏ö
  
  // Product Category Icons
  PILL         // üíä ‡∏¢‡∏≤‡πÄ‡∏°‡πá‡∏î
  BOTTLE       // üçº ‡∏¢‡∏≤‡∏ô‡πâ‡∏≥
  SYRINGE      // üíâ ‡∏¢‡∏≤‡∏â‡∏µ‡∏î
  BANDAGE      // ü©π ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå
  STETHOSCOPE  // ü©∫ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏û‡∏ó‡∏¢‡πå
  
  // Role Icons
  CROWN        // üëë ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
  SHIELD       // üõ°‡πå ‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
  PERSON       // üë§ ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
  EYE          // üëÅÔ∏è ‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
  GEAR         // ‚öôÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö
  
  // General Icons
  BOX          // üì¶ ‡∏Å‡∏•‡πà‡∏≠‡∏á
  FOLDER       // üìÅ ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
  TAG          // üè∑Ô∏è ‡∏õ‡πâ‡∏≤‡∏¢‡∏Å‡∏≥‡∏Å‡∏±‡∏ö
  STAR         // ‚≠ê ‡∏î‡∏≤‡∏ß
  HEART        // ‚ù§Ô∏è ‡∏´‡∏±‡∏ß‡πÉ‡∏à
  CIRCLE       // ‚ö™ ‡∏ß‡∏á‡∏Å‡∏•‡∏°
  SQUARE       // ‚¨ú ‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
  TRIANGLE     // üî∫ ‡∏™‡∏≤‡∏°‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
}

// ==========================================
// USER SCHEMA - V1.0
// ==========================================

// prisma/schemas/user.prisma
// ===== USER MANAGEMENT SCHEMA - Clean & Simple =====

model User {
  id          String     @id @default(cuid())
  email       String?    // Optional for notifications/recovery
  username    String     @unique  // Primary login credential
  password    String     // bcrypt hashed
  
  // Personal Information
  firstName   String
  lastName    String
  phone       String?
  
  // Account Status
  status      UserStatus @default(PENDING)
  isActive    Boolean    @default(true)
  emailVerified Boolean  @default(false)
  
  // Security
  lastLogin   DateTime?
  
  // Timestamps
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  // Relations
  organizationUsers   OrganizationUser[]
  
  // ‚úÖ FIXED: Audit Log Relations
  auditLogsAsUser     AuditLog[] @relation("AuditLogUser")
  auditLogsAsTarget   AuditLog[] @relation("AuditLogTarget")
  
  @@index([email])
  @@index([username])
  @@index([status])
  @@index([isActive])
  @@map("users")
}

// ==========================================
// ORGANIZATION SCHEMA - V1.0
// ==========================================

// prisma/schemas/organization.prisma
// ===== SIMPLIFIED ORGANIZATION SCHEMA WITH INVITE CODE ONLY =====

model Organization {
  id          String             @id @default(cuid())
  name        String
  slug        String             @unique // URL-friendly identifier
  description String?
  
  // Contact Information
  email       String?
  phone       String?
  
  // Settings
  status      OrganizationStatus @default(ACTIVE)
  timezone    String             @default("Asia/Bangkok")
  
  // Invite Code System Only
  inviteCode     String?    @unique // Organization-generated invite code
  inviteEnabled  Boolean    @default(true) // Allow joining via invite code
  
  // Timestamps
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  
  // Relations
  users       OrganizationUser[]
  departments Department[]
  auditLogs   AuditLog[]
  
  @@index([slug])
  @@index([status])
  @@index([inviteCode])
  @@map("organizations")
}

// User-Organization Relationship (Many-to-Many)
model OrganizationUser {
  id             String       @id @default(cuid())
  organizationId String
  userId         String
  
  // Role & Membership
  roles          OrganizationRole @default(MEMBER)
  isOwner        Boolean      @default(false)
  joinedAt       DateTime     @default(now())
  lastActiveAt   DateTime?
  
  // Status
  isActive       Boolean      @default(true)
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([organizationId, userId])
  @@index([isActive])
  @@index([roles])
  @@map("organization_users")
}

// Simplified Departments (Data Organization Only)
model Department {
  id             String       @id @default(cuid())
  organizationId String
  parentId       String?      // For hierarchical structure (optional)
  
  // Department Details
  name           String
  slug           String       // Short slug (e.g., "ICU", "OPD", "PHARMACY")
  description    String?
  color          ColorTheme?
  icon           IconType?
  
  // Simple Status
  isActive       Boolean      @default(true)
  
  // Audit Fields (for tracking who created/modified)
  createdBy      String       // User who created
  updatedBy      String?      // User who last updated
  
  // Timestamps
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  parent         Department?  @relation("DepartmentHierarchy", fields: [parentId], references: [id])
  children       Department[] @relation("DepartmentHierarchy")
  
  // ‚úÖ FIXED: Audit Log Relation
  auditLogs      AuditLog[]
  
  @@unique([organizationId, slug])
  @@index([parentId])
  @@index([isActive])
  @@map("departments")
}

// ==========================================
// AUDIT SCHEMA - V1.0
// ==========================================

// prisma/schemas/audit.prisma
// ===== PRODUCTION-READY AUDIT SYSTEM - InvenStock V2.0 =====

model AuditLog {
  id             String        @id @default(cuid())
  organizationId String
  
  // Actor & Target
  userId         String?       // ‡∏ú‡∏π‡πâ‡∏ó‡∏≥ action
  targetUserId   String?       // ‡∏ú‡∏π‡πâ‡∏ñ‡∏π‡∏Å‡∏Å‡∏£‡∏∞‡∏ó‡∏≥ (optional)
  
  // Department Context
  departmentId   String?       // ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
  
  // Action Classification
  action         String        // "products.create"
  category       AuditCategory // PRODUCT, STOCK, TRANSFER, USER, ORG
  severity       AuditSeverity @default(INFO)
  
  // Human-Readable
  description    String        // "‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Paracetamol ‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏±‡∏á‡∏¢‡∏≤"
  
  // Resource Tracking
  resourceId     String?       // ID ‡∏Ç‡∏≠‡∏á record
  resourceType   String?       // "Product", "Stock", "Transfer"
  
  // Detailed Data
  payload        Json?         // { before, after, metadata }
  
  // Request Context
  ipAddress      String?
  userAgent      String?       // Browser/device info
  
  // Timestamp
  createdAt      DateTime @default(now())
  
  // Relations
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  user           User? @relation("AuditLogUser", fields: [userId], references: [id], onDelete: SetNull)
  targetUser     User? @relation("AuditLogTarget", fields: [targetUserId], references: [id], onDelete: SetNull)
  department     Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull)
  
  // Optimized Indexes
  @@index([organizationId, createdAt(sort: Desc)])
  @@index([departmentId, createdAt(sort: Desc)])
  @@index([userId, createdAt(sort: Desc)])
  @@index([action])
  @@index([category, severity])
  @@index([resourceId])
  @@map("audit_logs")
}

// Enums
enum AuditCategory {
  PRODUCT       // ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  STOCK         // ‡∏™‡∏ï‡πá‡∏≠‡∏Å
  TRANSFER      // ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢
  USER          // ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  ORGANIZATION  // ‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£
  DEPARTMENT    // ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô
  AUTH          // Authentication
  SYSTEM        // ‡∏£‡∏∞‡∏ö‡∏ö
}

enum AuditSeverity {
  INFO          // ‡∏õ‡∏Å‡∏ï‡∏¥ (90%)
  WARNING       // ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (8%)
  CRITICAL      // ‡∏ß‡∏¥‡∏Å‡∏§‡∏ï‡∏¥ (2%)
}
